"""modifiying contact datatype to string

Revision ID: 491bcf4ea41d
Revises: 5abbdec375c2
Create Date: 2023-07-20 19:16:26.539543

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '491bcf4ea41d'
down_revision = '5abbdec375c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auth_user_groups', schema=None) as batch_op:
        batch_op.drop_index('auth_user_groups_group_id_97559544')
        batch_op.drop_index('auth_user_groups_user_id_6a12ed8b')

    op.drop_table('auth_user_groups')
    with op.batch_alter_table('django_admin_log', schema=None) as batch_op:
        batch_op.drop_index('django_admin_log_content_type_id_c4bce8eb')
        batch_op.drop_index('django_admin_log_user_id_c564eba6')

    op.drop_table('django_admin_log')
    with op.batch_alter_table('job_languageknownmaster', schema=None) as batch_op:
        batch_op.drop_index('job_languageknownmaster_candidate_id_cfa3f05f')

    op.drop_table('job_languageknownmaster')
    op.drop_table('job_statemaster')
    op.drop_table('job_candidatemaster')
    with op.batch_alter_table('job_preferencemaster', schema=None) as batch_op:
        batch_op.drop_index('job_preferencemaster_candidate_id_7e4be45a')

    op.drop_table('job_preferencemaster')
    op.drop_table('token_blacklist_blacklistedtoken')
    op.drop_table('django_migrations')
    with op.batch_alter_table('auth_group_permissions', schema=None) as batch_op:
        batch_op.drop_index('auth_group_permissions_group_id_b120cbf9')
        batch_op.drop_index('auth_group_permissions_permission_id_84c5c92e')

    op.drop_table('auth_group_permissions')
    with op.batch_alter_table('job_citymaster', schema=None) as batch_op:
        batch_op.drop_index('job_citymaster_state_id_6616737c')

    op.drop_table('job_citymaster')
    with op.batch_alter_table('job_academicmaster', schema=None) as batch_op:
        batch_op.drop_index('job_academicmaster_candidate_id_319e55f4')

    op.drop_table('job_academicmaster')
    with op.batch_alter_table('auth_permission', schema=None) as batch_op:
        batch_op.drop_index('auth_permission_content_type_id_2f476e4b')

    op.drop_table('auth_permission')
    with op.batch_alter_table('django_session', schema=None) as batch_op:
        batch_op.drop_index('django_session_expire_date_a5c62663')
        batch_op.drop_index('django_session_session_key_c0390e0f_like')

    op.drop_table('django_session')
    op.drop_table('job_selectmaster')
    with op.batch_alter_table('token_blacklist_outstandingtoken', schema=None) as batch_op:
        batch_op.drop_index('token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_like')
        batch_op.drop_index('token_blacklist_outstandingtoken_user_id_83bc629a')

    op.drop_table('token_blacklist_outstandingtoken')
    with op.batch_alter_table('auth_user_user_permissions', schema=None) as batch_op:
        batch_op.drop_index('auth_user_user_permissions_permission_id_1fbb5f2c')
        batch_op.drop_index('auth_user_user_permissions_user_id_a95ead1b')

    op.drop_table('auth_user_user_permissions')
    with op.batch_alter_table('job_technologyknownmaster', schema=None) as batch_op:
        batch_op.drop_index('job_technologyknownmaster_candidate_id_5fa25e52')

    op.drop_table('job_technologyknownmaster')
    with op.batch_alter_table('auth_group', schema=None) as batch_op:
        batch_op.drop_index('auth_group_name_a6ea08ec_like')

    op.drop_table('auth_group')
    with op.batch_alter_table('job_optionmaster', schema=None) as batch_op:
        batch_op.drop_index('job_optionmaster_select_id_8f613d11')

    op.drop_table('job_optionmaster')
    with op.batch_alter_table('job_referencemaster', schema=None) as batch_op:
        batch_op.drop_index('job_referencemaster_candidate_id_e9666134')

    op.drop_table('job_referencemaster')
    op.drop_table('django_content_type')
    with op.batch_alter_table('authtoken_token', schema=None) as batch_op:
        batch_op.drop_index('authtoken_token_key_10f0b77e_like')

    op.drop_table('authtoken_token')
    with op.batch_alter_table('auth_user', schema=None) as batch_op:
        batch_op.drop_index('auth_user_username_6821ab7c_like')

    op.drop_table('auth_user')
    with op.batch_alter_table('job_experiencemaster', schema=None) as batch_op:
        batch_op.drop_index('job_experiencemaster_candidate_id_31977ff9')

    op.drop_table('job_experiencemaster')
    with op.batch_alter_table('candidate', schema=None) as batch_op:
        batch_op.alter_column('contact_no',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)

    with op.batch_alter_table('reference', schema=None) as batch_op:
        batch_op.alter_column('refe_contact_no',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reference', schema=None) as batch_op:
        batch_op.alter_column('refe_contact_no',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('candidate', schema=None) as batch_op:
        batch_op.alter_column('contact_no',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    op.create_table('job_experiencemaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('designation', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('from_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('to_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_experiencemaster_candidate_id_31977ff9_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_experiencemaster_pkey')
    )
    with op.batch_alter_table('job_experiencemaster', schema=None) as batch_op:
        batch_op.create_index('job_experiencemaster_candidate_id_31977ff9', ['candidate_id'], unique=False)

    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_user_pkey'),
    sa.UniqueConstraint('username', name='auth_user_username_key'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('auth_user', schema=None) as batch_op:
        batch_op.create_index('auth_user_username_6821ab7c_like', ['username'], unique=False)

    op.create_table('authtoken_token',
    sa.Column('key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='authtoken_token_user_id_35299eff_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('key', name='authtoken_token_pkey'),
    sa.UniqueConstraint('user_id', name='authtoken_token_user_id_key')
    )
    with op.batch_alter_table('authtoken_token', schema=None) as batch_op:
        batch_op.create_index('authtoken_token_key_10f0b77e_like', ['key'], unique=False)

    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_referencemaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('refe_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('refe_contact_no', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('refe_relation', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_referencemaster_candidate_id_e9666134_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_referencemaster_pkey')
    )
    with op.batch_alter_table('job_referencemaster', schema=None) as batch_op:
        batch_op.create_index('job_referencemaster_candidate_id_e9666134', ['candidate_id'], unique=False)

    op.create_table('job_optionmaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('option_key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('select_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['select_id'], ['job_selectmaster.id'], name='job_optionmaster_select_id_8f613d11_fk_job_selectmaster_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_optionmaster_pkey')
    )
    with op.batch_alter_table('job_optionmaster', schema=None) as batch_op:
        batch_op.create_index('job_optionmaster_select_id_8f613d11', ['select_id'], unique=False)

    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('auth_group', schema=None) as batch_op:
        batch_op.create_index('auth_group_name_a6ea08ec_like', ['name'], unique=False)

    op.create_table('job_technologyknownmaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('technology', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('ranting', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_technologyknownm_candidate_id_5fa25e52_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_technologyknownmaster_pkey')
    )
    with op.batch_alter_table('job_technologyknownmaster', schema=None) as batch_op:
        batch_op.create_index('job_technologyknownmaster_candidate_id_5fa25e52', ['candidate_id'], unique=False)

    op.create_table('auth_user_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='auth_user_user_permissions_user_id_permission_id_14a6b632_uniq')
    )
    with op.batch_alter_table('auth_user_user_permissions', schema=None) as batch_op:
        batch_op.create_index('auth_user_user_permissions_user_id_a95ead1b', ['user_id'], unique=False)
        batch_op.create_index('auth_user_user_permissions_permission_id_1fbb5f2c', ['permission_id'], unique=False)

    op.create_table('token_blacklist_outstandingtoken',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jti', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='token_blacklist_outs_user_id_83bc629a_fk_auth_user', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_outstandingtoken_pkey'),
    sa.UniqueConstraint('jti', name='token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_uniq'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('token_blacklist_outstandingtoken', schema=None) as batch_op:
        batch_op.create_index('token_blacklist_outstandingtoken_user_id_83bc629a', ['user_id'], unique=False)
        batch_op.create_index('token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_like', ['jti'], unique=False)

    op.create_table('job_selectmaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('select_key', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='job_selectmaster_pkey')
    )
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    with op.batch_alter_table('django_session', schema=None) as batch_op:
        batch_op.create_index('django_session_session_key_c0390e0f_like', ['session_key'], unique=False)
        batch_op.create_index('django_session_expire_date_a5c62663', ['expire_date'], unique=False)

    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('auth_permission', schema=None) as batch_op:
        batch_op.create_index('auth_permission_content_type_id_2f476e4b', ['content_type_id'], unique=False)

    op.create_table('job_academicmaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('name_of_board_university', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('passing_year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('percentage', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_academicmaster_candidate_id_319e55f4_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_academicmaster_pkey')
    )
    with op.batch_alter_table('job_academicmaster', schema=None) as batch_op:
        batch_op.create_index('job_academicmaster_candidate_id_319e55f4', ['candidate_id'], unique=False)

    op.create_table('job_citymaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('state_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['job_statemaster.id'], name='job_citymaster_state_id_6616737c_fk_job_statemaster_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_citymaster_pkey')
    )
    with op.batch_alter_table('job_citymaster', schema=None) as batch_op:
        batch_op.create_index('job_citymaster_state_id_6616737c', ['state_id'], unique=False)

    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    )
    with op.batch_alter_table('auth_group_permissions', schema=None) as batch_op:
        batch_op.create_index('auth_group_permissions_permission_id_84c5c92e', ['permission_id'], unique=False)
        batch_op.create_index('auth_group_permissions_group_id_b120cbf9', ['group_id'], unique=False)

    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.create_table('token_blacklist_blacklistedtoken',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('blacklisted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['token_id'], ['token_blacklist_outstandingtoken.id'], name='token_blacklist_blacklistedtoken_token_id_3cc7fe56_fk', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='token_blacklist_blacklistedtoken_pkey'),
    sa.UniqueConstraint('token_id', name='token_blacklist_blacklistedtoken_token_id_key')
    )
    op.create_table('job_preferencemaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('prefer_location', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('notice_period', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('expected_ctc', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('current_ctc', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_preferencemaster_candidate_id_7e4be45a_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_preferencemaster_pkey')
    )
    with op.batch_alter_table('job_preferencemaster', schema=None) as batch_op:
        batch_op.create_index('job_preferencemaster_candidate_id_7e4be45a', ['candidate_id'], unique=False)

    op.create_table('job_candidatemaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('fname', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('lname', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('contact_no', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('dob', sa.DATE(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='job_candidatemaster_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_statemaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='job_statemaster_pkey')
    )
    op.create_table('job_languageknownmaster',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('language', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('write', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('speak', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['job_candidatemaster.id'], name='job_languageknownmas_candidate_id_cfa3f05f_fk_job_candi', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='job_languageknownmaster_pkey')
    )
    with op.batch_alter_table('job_languageknownmaster', schema=None) as batch_op:
        batch_op.create_index('job_languageknownmaster_candidate_id_cfa3f05f', ['candidate_id'], unique=False)

    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='django_admin_log_content_type_id_c4bce8eb_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='django_admin_log_user_id_c564eba6_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    )
    with op.batch_alter_table('django_admin_log', schema=None) as batch_op:
        batch_op.create_index('django_admin_log_user_id_c564eba6', ['user_id'], unique=False)
        batch_op.create_index('django_admin_log_content_type_id_c4bce8eb', ['content_type_id'], unique=False)

    op.create_table('auth_user_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_user_groups_group_id_97559544_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name='auth_user_groups_user_id_6a12ed8b_fk_auth_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='auth_user_groups_user_id_group_id_94350c0c_uniq')
    )
    with op.batch_alter_table('auth_user_groups', schema=None) as batch_op:
        batch_op.create_index('auth_user_groups_user_id_6a12ed8b', ['user_id'], unique=False)
        batch_op.create_index('auth_user_groups_group_id_97559544', ['group_id'], unique=False)

    # ### end Alembic commands ###
